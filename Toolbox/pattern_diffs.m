function [diff_data] = ...
    pattern_diffs(all_performances, all_resp_freq, all_rec_times, ...
    patterns, numerosities, what_analysis, curr_experiments, ...
    focus_type, calc_type, err_type)

% Function to Get Differences in Behaviour Among Patterns

%% Pre Allocation
placeholder = {"P1 vs. P2", "P1 vs. P3", "P3 vs. P2"; ...
    [], [], []; [], [], []; [], [], []};
% row 1: names; row 2: all diff values over subjects/sessions; row 3:
% mean/median of it; row 4: STD/SEM
diff_data = cell(length(curr_experiments), size(numerosities, 1));

% Iterate over Samples
for sample_idx = 1:size(numerosities, 1)

    % Iterate over Experiments
    for exp_idx = 1:length(curr_experiments)
        % Pre Allocation
        filtered_table = cell(3, 2);
        diff_data{exp_idx, sample_idx} = placeholder;

        % Write Data as Table
        switch focus_type
            case 'Overall'
                data_table = ...
                    datatable({all_performances{exp_idx}}, ...
                    {all_resp_freq{exp_idx}}, {all_rec_times{exp_idx}}, ...
                    patterns, numerosities, {' '});

            case 'Matches'
                data_table = ...
                    datatable({all_performances{exp_idx}(:, :, :, 1)}, ...
                    {all_resp_freq{exp_idx}(:, :, :, 1)}, ...
                    {all_rec_times{exp_idx}(:, :, :, 1)}, ...
                    patterns, numerosities, {' '});
        end

        % iterate over patterns
        for pattern = 1:length(patterns)
            % filter table to current pattern
            filtered_sample = ...
                data_table(data_table.Sample == ...
                numerosities(sample_idx, 1), :);
            filtered_table{pattern, 1} = ...
                filtered_sample(string(filtered_sample.Pattern) == ...
                patterns{pattern}, :);

            switch what_analysis
                case "Performance"
                    filtered_table{pattern, 2} = ...
                        filtered_table{pattern, 1}.Performance;
                case "Response Frequency"
                    filtered_table{pattern, 2} = ...
                        filtered_table{pattern, 1}.ResponseFrequency;
                case "Reaction Times"
                    filtered_table{pattern, 2} = ...
                        filtered_table{pattern, 1}.RT;
            end
        end

        % P2 - P1
        diff_data{exp_idx, sample_idx}{2, 1} = ...
            diff([filtered_table{2, 2}, filtered_table{1, 2}], 1, 2);
        % P3 - P1
        diff_data{exp_idx, sample_idx}{2, 2} = ...
            diff([filtered_table{3, 2}, filtered_table{1, 2}], 1, 2);
        % P3 - P2
        diff_data{exp_idx, sample_idx}{2, 3} = ...
            diff([filtered_table{3, 2}, filtered_table{2, 2}], 1, 2);

        %% Take Average of Differences
        switch calc_type
            case 'Mean'
                % P2 - P1
                diff_data{exp_idx, sample_idx}{3, 1} = ...
                    mean(diff_data{exp_idx, sample_idx}{2, 1}, ...
                    "all", "omitnan");
                % P3 - P1
                diff_data{exp_idx, sample_idx}{3, 2} = ...
                    mean(diff_data{exp_idx, sample_idx}{2, 2}, ...
                    "all", "omitnan");
                % P3 - P2
                diff_data{exp_idx, sample_idx}{3, 3} = ...
                    mean(diff_data{exp_idx, sample_idx}{2, 3}, ...
                    "all", "omitnan");
            case 'Median'
                % P2 - P1
                diff_data{exp_idx, sample_idx}{3, 1} = ...
                    median(diff_data{exp_idx, sample_idx}{2, 1}, ...
                    "all", "omitnan");
                % P3 - P1
                diff_data{exp_idx, sample_idx}{3, 2} = ...
                    median(diff_data{exp_idx, sample_idx}{2, 2}, ...
                    "all", "omitnan");
                % P3 - P2
                diff_data{exp_idx, sample_idx}{3, 3} = ...
                    median(diff_data{exp_idx, sample_idx}{2, 3}, ...
                    "all", "omitnan");
        end

        %% Calculate Corresponding Error
        switch err_type
            case 'STD'
                % P2 - P1
                diff_data{exp_idx, sample_idx}{4, 1} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 1}, ...
                    [], "all", "omitnan");
                % P3 - P1
                diff_data{exp_idx, sample_idx}{4, 2} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 2}, ...
                    [], "all", "omitnan");
                % P3 - P2
                diff_data{exp_idx, sample_idx}{4, 3} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 3}, ...
                    [], "all", "omitnan");
            case 'SEM'
                % P2 - P1
                diff_data{exp_idx, sample_idx}{4, 1} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 1}, ...
                    [], "all", "omitnan") / ...
                    sqrt(numel(~isnan(diff_data{exp_idx, sample_idx}{2, 1})));
                % P3 - P1
                diff_data{exp_idx, sample_idx}{4, 2} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 2}, ...
                    [], "all", "omitnan") / ...
                    sqrt(numel(~isnan(diff_data{exp_idx, sample_idx}{2, 2})));
                % P3 - P2
                diff_data{exp_idx, sample_idx}{4, 3} = ...
                    std(diff_data{exp_idx, sample_idx}{2, 3}, ...
                    [], "all", "omitnan") / ...
                    sqrt(numel(~isnan(diff_data{exp_idx, sample_idx}{2, 3})));
        end
    end
end

end